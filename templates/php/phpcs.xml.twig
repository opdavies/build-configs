<?xml version="1.0"?>
<!-- {{ managedText | raw }} -->

<ruleset name="{{ name }} coding standards">
  <description>PHPCS configuration file for {{ name }}.</description>

  {% for path in php.phpcs.paths|default('[]') %}
  <file>{{ path }}</file>
  {% endfor %}

  <arg value="np"/>

  {% for standard in php.phpcs.standards|default(['Drupal', 'DrupalPractice']) %}
  {% if not standard is same as "Drupal" %}
  <rule ref="{{ standard }}"/>
  {% endif %}
  {% endfor %}

  {% if type is same as "drupal-project" and "Drupal" in php.phpcs.standards %}
  <rule ref="Drupal">
    <exclude name="Drupal.Commenting.ClassComment.Missing"/>
    <exclude name="Drupal.Commenting.DataTypeNamespace.DataTypeNamespace"/>
    <exclude name="Drupal.Commenting.Deprecated"/>
    <exclude name="Drupal.Commenting.DocComment.ContentAfterOpen"/>
    <exclude name="Drupal.Commenting.DocComment.MissingShort"/>
    <exclude name="Drupal.Commenting.FunctionComment.IncorrectParamVarName"/>
    <exclude name="Drupal.Commenting.FunctionComment.IncorrectTypeHint"/>
    <exclude name="Drupal.Commenting.FunctionComment.InvalidReturn"/>
    <exclude name="Drupal.Commenting.FunctionComment.Missing"/>
    <exclude name="Drupal.Commenting.FunctionComment.MissingParamComment"/>
    <exclude name="Drupal.Commenting.FunctionComment.MissingReturnComment"/>
    <exclude name="Drupal.Commenting.FunctionComment.ParamTypeSpaces"/>
    <exclude name="Drupal.Commenting.FunctionComment.TypeHintMissing"/>
    <exclude name="Drupal.Commenting.InlineComment.DocBlock"/>
    <exclude name="Drupal.Commenting.VariableComment.Missing"/>
    <exclude name="Drupal.NamingConventions.ValidFunctionName.ScopeNotCamelCaps"/>
    <exclude name="DrupalPractice.Objects.StrictSchemaDisabled.StrictConfigSchema"/>
  </rule>
  {% endif %}
</ruleset>
